const nextPosts = document.getElementById('readNext');

    onSnapshot(orgQuery, (snapshot) => {
      nextPosts.innerHTML = "";
      snapshot.forEach((docSnap) => {
        const orgData = docSnap.data();
        const org = document.createElement("div");
        let nextLink = orgData.postLink || "#search?q="+encodeURI(orgData.productNameInput);
        
        org.innerHTML = `<p><a href="../../${nextLink}">${orgData.productNameInput}</a>`;
        
        nextPosts.appendChild(org);
      });
    });

  </script>

<script type="module" defer>
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";
  import { getFirestore, collection, addDoc, onSnapshot, query, orderBy, doc, updateDoc, increment, where } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";
  import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-auth.js";

  const res = await fetch("/.netlify/functions/getFirebaseConfig");
const config = await res.json();
const app = initializeApp(config);
  const db = getFirestore(app);
  const auth = getAuth(app);
  const visitorsCollection = collection(db, "ginidev");
  const commentsCollection = collection(db, "comments");

  let currentUserName = null;

  onAuthStateChanged(auth, (user) => {
    currentUserName = user ? (user.displayName || `user_v${user.uid.slice(0,5)}${user.email.slice(0,4)}` || "Anonymous") : null;
  });
